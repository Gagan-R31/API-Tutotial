name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KUBE_CA_PEM: ${{ secrets.KUBE_CA_PEM }}
      KUBE_API_SERVER: ${{ secrets.KUBE_API_SERVER }}
      KUBE_CRET_PEM: ${{ secrets.KUBE_CRET_PEM }}
      KUBE_KEY_PEM: ${{ secrets.KUBE_KEY_PEM }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build Docker image
      run: |
        docker build . -t gaganr31/api-app:latest

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Push Docker image to DockerHub
      run: |
        docker push gaganr31/api-app:latest

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Configure kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "
        apiVersion: v1
        kind: Config
        clusters:
        - cluster:
            certificate-authority-data: ${{ env.KUBE_CA_PEM }}
            server: https://${{ env.KUBE_API_SERVER }}
          name: cluster-name
        contexts:
        - context:
            cluster: cluster-name
            user: cluster-user
          name: context-name
        current-context: context-name
        users:
        - name: cluster-user
          user:
            client-certificate-data: ${{ env.KUBE_CRET_PEM }}
            client-key-data: ${{ env.KUBE_KEY_PEM }}
        " > $HOME/.kube/config

    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

    - name: Deploy with Helm
      run: |
        helm upgrade --install api-app ./chart/api-app --namespace=default
