name: CI/CD Pipeline

on:
  push:
    paths:
      - app.py

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG }}
      DOCKER_IMAGE: gaganr31/api-app
      EXTERNAL_IP: "146.190.9.118"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Get version
      id: version
      run: echo "tag=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build . -t ${{ env.DOCKER_IMAGE }}:${{ env.tag }}

    - name: Push Docker image to DockerHub
      run: |
        docker push ${{ env.DOCKER_IMAGE }}:${{ env.tag }}

    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'latest'

    - name: Configure kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

    - name: Uninstall Helm app
      run: |
        helm uninstall api-app

    - name: Install Helm app
      run: |
        helm install api-app ./chart/api-app --set image.tag=${{ env.tag }} --set service.externalIP=${{ env.EXTERNAL_IP }}
